# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\stack_image_viewer.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import numpy as np
import pyqtgraph as pg
from PyQt5 import QtCore, QtWidgets


class UiViewer(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(681, 641)
        self.verticalLayout = QtWidgets.QVBoxLayout(Form)
        self.verticalLayout.setObjectName("verticalLayout")
        self.imageLayout = QtWidgets.QGridLayout()
        self.imageLayout.setObjectName("imageLayout")
        self.verticalLayout.addLayout(self.imageLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.nCurrent = QtWidgets.QLabel(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.nCurrent.sizePolicy().hasHeightForWidth())
        self.nCurrent.setSizePolicy(sizePolicy)
        self.nCurrent.setMinimumSize(QtCore.QSize(25, 0))
        self.nCurrent.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.nCurrent.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.nCurrent.setObjectName("nCurrent")
        self.horizontalLayout_2.addWidget(self.nCurrent)
        self.label_18 = QtWidgets.QLabel(Form)
        self.label_18.setObjectName("label_18")
        self.horizontalLayout_2.addWidget(self.label_18)
        self.nTotal = QtWidgets.QLabel(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.nTotal.sizePolicy().hasHeightForWidth())
        self.nTotal.setSizePolicy(sizePolicy)
        self.nTotal.setMinimumSize(QtCore.QSize(25, 0))
        self.nTotal.setObjectName("nTotal")
        self.horizontalLayout_2.addWidget(self.nTotal)
        self.imgSlider = QtWidgets.QSlider(Form)
        self.imgSlider.setMinimumSize(QtCore.QSize(400, 0))
        self.imgSlider.setStyleSheet("QSlider::groove:horizontal {\n"
                                     "border: 1px solid #bbb;\n"
                                     "background: white;\n"
                                     "height: 10px;\n"
                                     "border-radius: 4px;\n"
                                     "}\n"
                                     "\n"
                                     "QSlider::sub-page:horizontal {\n"
                                     "background: qlineargradient(x1: 0, y1: 0,    x2: 0, y2: 1,\n"
                                     "    stop: 0 #66e, stop: 1 #bbf);\n"
                                     "background: qlineargradient(x1: 0, y1: 0.2, x2: 1, y2: 1,\n"
                                     "    stop: 0 #bbf, stop: 1 #55f);\n"
                                     "border: 1px solid #777;\n"
                                     "height: 10px;\n"
                                     "border-radius: 4px;\n"
                                     "}\n"
                                     "\n"
                                     "QSlider::add-page:horizontal {\n"
                                     "background: #fff;\n"
                                     "border: 1px solid #777;\n"
                                     "height: 10px;\n"
                                     "border-radius: 4px;\n"
                                     "}\n"
                                     "\n"
                                     "QSlider::handle:horizontal {\n"
                                     "background: qlineargradient(x1:0, y1:0, x2:1, y2:1,\n"
                                     "    stop:0 #eee, stop:1 #ccc);\n"
                                     "border: 1px solid #777;\n"
                                     "width: 35px;\n"
                                     "margin-top: -2px;\n"
                                     "margin-bottom: -2px;\n"
                                     "border-radius: 4px;\n"
                                     "}\n"
                                     "\n"
                                     "QSlider::handle:horizontal:hover {\n"
                                     "background: qlineargradient(x1:0, y1:0, x2:1, y2:1,\n"
                                     "    stop:0 #fff, stop:1 #ddd);\n"
                                     "border: 1px solid #444;\n"
                                     "border-radius: 4px;\n"
                                     "}\n"
                                     "\n"
                                     "QSlider::sub-page:horizontal:disabled {\n"
                                     "background: #bbb;\n"
                                     "border-color: #999;\n"
                                     "}\n"
                                     "\n"
                                     "QSlider::add-page:horizontal:disabled {\n"
                                     "background: #eee;\n"
                                     "border-color: #999;\n"
                                     "}\n"
                                     "\n"
                                     "QSlider::handle:horizontal:disabled {\n"
                                     "background: #eee;\n"
                                     "border: 1px solid #aaa;\n"
                                     "border-radius: 4px;\n"
                                     "}")
        self.imgSlider.setMaximum(500)
        self.imgSlider.setOrientation(QtCore.Qt.Horizontal)
        self.imgSlider.setObjectName("imgSlider")
        self.horizontalLayout_2.addWidget(self.imgSlider)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.previousButton = QtWidgets.QPushButton(Form)
        self.previousButton.setObjectName("previousButton")
        self.horizontalLayout.addWidget(self.previousButton)
        self.cellCombo = QtWidgets.QComboBox(Form)
        self.cellCombo.setEditable(False)
        self.cellCombo.setCurrentText("")
        self.cellCombo.setMaxVisibleItems(30)
        self.cellCombo.setObjectName("cellCombo")
        self.cellCombo.setEditable(True)
        line_edit = self.cellCombo.lineEdit()
        line_edit.setAlignment(QtCore.Qt.AlignCenter)
        line_edit.setReadOnly(True)
        self.horizontalLayout.addWidget(self.cellCombo)
        self.nextButtonButton = QtWidgets.QPushButton(Form)
        self.nextButtonButton.setObjectName("nextButtonButton")
        self.horizontalLayout.addWidget(self.nextButtonButton)
        self.verticalLayout.addLayout(self.horizontalLayout)

        self.retranslateUi(Form)
        self.cellCombo.setCurrentIndex(-1)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.nCurrent.setText(_translate("Form", "0"))
        self.label_18.setText(_translate("Form", "/"))
        self.nTotal.setText(_translate("Form", "0"))
        self.previousButton.setText(_translate("Form", "<"))
        self.nextButtonButton.setText(_translate("Form", ">"))


class StackImageViewer(QtWidgets.QWidget):

    def __init__(self, image_sets, set_levels=[0, 0.7], title='ImageViewer'):
        super().__init__()
        self.ui = UiViewer()
        self.ui.setupUi(self)
        self.setWindowTitle(title)
        self.image_sets = image_sets
        self.set_levels = set_levels  # [0,0.7] for SIM image, [1, 1] for WF image. [0]*min [1]*max
        # set image
        self.imv = pg.ImageView()
        self.imv.ui.roiBtn.hide()
        self.imv.ui.menuBtn.hide()
        self.ui.imageLayout.addWidget(self.imv)

        # operations
        self.ui.imgSlider.valueChanged.connect(self.imageSliderChanged)
        self.ui.previousButton.clicked.connect(self.previousSet)
        self.ui.nextButtonButton.clicked.connect(self.nextSet)
        self.ui.cellCombo.currentIndexChanged.connect(self.selectSet)

        self.update()

    def update(self):
        self.num_sets = len(self.image_sets)  # number of image sets
        self.idx_sets = 0
        self.image_tmp = self.image_sets[self.idx_sets]
        self.num_z, self.dim_h, self.dim_w = np.shape(self.image_tmp)

        # set slider
        self.idx_z = 0  # current image index
        self.ui.nTotal.setText(str(self.num_z))
        self.ui.nCurrent.setText(str(self.idx_z))
        self.ui.imgSlider.setMinimum(0)
        self.ui.imgSlider.setMaximum(self.num_z - 1)

        self.level_max = np.amax(self.image_tmp)
        self.level_min = np.amin(self.image_tmp)
        self.imv.setImage((self.image_tmp[self.idx_z, :, :]).T, autoRange=False,
                          levels=(self.set_levels[0] * self.level_min, self.set_levels[1] * self.level_max))

        # set combo box
        self.ui.cellCombo.clear()
        self.comboList = map(str, np.arange(self.num_sets))
        self.ui.cellCombo.addItems(self.comboList)

    def imageSliderChanged(self):
        self.idx_z = int(self.ui.imgSlider.value())
        self.imv.setImage((self.image_tmp[self.idx_z, :, :]).T, autoRange=False,
                          levels=(self.set_levels[0] * self.level_min, self.set_levels[1] * self.level_max))
        self.ui.nCurrent.setText(str(self.idx_z + 1))

    def previousSet(self):
        self.idx_sets = self.idx_sets - 1
        if self.idx_sets == -1:
            self.idx_sets = self.num_sets - 1
        self.displayCell(self.idx_sets)
        self.ui.cellCombo.setCurrentIndex(self.idx_sets)

    def nextSet(self):
        self.idx_sets = self.idx_sets + 1
        if self.idx_sets == self.num_sets:
            self.idx_sets = 0
        self.displayCell(self.idx_sets)
        self.ui.cellCombo.setCurrentIndex(self.idx_sets)

    def selectSet(self):
        self.displayCell(self.ui.cellCombo.currentIndex())

    def displayCell(self, idx_set):
        self.image_tmp = self.image_sets[idx_set]
        self.level_max = np.amax(self.image_tmp)
        self.level_min = np.amin(self.image_tmp)
        self.imv.setImage((self.image_tmp[self.idx_z, :, :]).T, autoRange=False,
                          levels=(self.set_levels[0] * self.level_min, self.set_levels[1] * self.level_max))


if __name__ == '__main__':
    import sys

    image_sets_1 = [np.random.randint(0, 100, size=(3, 30, 30)), np.random.randint(0, 100, size=(3, 30, 30)),
                    np.random.randint(0, 100, size=(3, 30, 30))]
    app = QtWidgets.QApplication(sys.argv)

    display_image_widget = StackImageViewer(image_sets=image_sets_1, set_levels=[0, 0.7])

    display_image_widget.show()
    sys.exit(app.exec_())
